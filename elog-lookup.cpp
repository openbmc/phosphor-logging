// This file was autogenerated.  Do not edit!
// See elog-gen.py for more details
#include <map>
#include <vector>
#include <phosphor-logging/log.hpp>

namespace phosphor
{

namespace logging
{

std::map<std::string,std::vector<std::string>> g_errMetaMap = {
         {"example.xyz.openbmc_project.Example.Elog.TestErrorTwo",{"DEV_ADDR","DEV_ID","DEV_NAME"}},
         {"example.xyz.openbmc_project.Example.Event.Event",{"ESEL"}},
         {"example.xyz.openbmc_project.Example.Elog.TestErrorOne",{"ERRNUM","FILE_PATH","FILE_NAME"}},
         {"example.xyz.openbmc_project.Example.Foo.Foo",{"FOO_DATA"}},
         {"example.xyz.openbmc_project.Example.Bar.Bar",{"BAR_DATA"}},
};

std::map<std::string,level> g_errLevelMap = {
         {"example.xyz.openbmc_project.Example.Elog.TestErrorTwo",level::ERR},
         {"example.xyz.openbmc_project.Example.Event.Event",level::INFO},
         {"example.xyz.openbmc_project.Example.Elog.TestErrorOne",level::INFO},
         {"example.xyz.openbmc_project.Example.Foo.Foo",level::INFO},
         {"example.xyz.openbmc_project.Example.Bar.Bar",level::INFO},
};

} // namespace logging

} // namespace phosphor
