## Note that this file is not auto generated, it is what generates the
## elog-lookup.cpp file
// This file was autogenerated.  Do not edit!
// See elog-gen.py for more details
#include <map>
#include <vector>
#include <phosphor-logging/log.hpp>

namespace phosphor
{

namespace logging
{

std::map<std::string,std::vector<std::string>> g_errMetaMap = {
    % for name in errors:
<%
    meta_string = '\",\"'.join(meta[name])

    parent = parents[name]
    while parent:
        tmpparent = parent.split('.')
        ## Name is the last item
        parent_name = tmpparent[-1]
        parent_meta_short = '\",\"'.join(meta[parent])
        meta_string = meta_string + "\",\"" + parent_meta_short
        parent = parents[parent]
%>\
    {"${name}",{"${meta_string}"}},
    % endfor
};

std::map<std::string,level> g_errLevelMap = {
    % for a in errors:
    <% meta_string = '\",\"'.join(meta[a]) %> \
    {"${a}",level::${error_lvl[a]}},
    % endfor
};

} // namespace logging

} // namespace phosphor
