## Note that this file is not auto generated, it is what generates the
## elog-gen.hpp file
// This file was autogenerated.  Do not edit!

#include <string>
#include <unordered_set>

namespace lg2
{
namespace details
{

bool filterEvent([[maybe_unused]] const std::string& id)
{
    static constexpr bool default_return = \
        % if data['events']['default'] == 'allowed':
false;
        % else:
true;
        % endif
    % if "ids" in data['events'] and len(data['events']['ids']) != 0:
    static const std::unordered_set<std::string> event_ids = {
        % for item in data['events']['ids']:
        "${item}",
        % endfor
    };

    if (event_ids.contains(id))
    {
        return !default_return;
    }
    % endif

    return default_return;
}

bool filterError([[maybe_unused]] const std::string& id)
{
    static constexpr bool default_return = \
        % if data['errors']['default'] == 'allowed':
false;
        % else:
true;
        % endif
    % if "ids" in data['errors'] and len(data['errors']['ids']) != 0:
    static const std::unordered_set<std::string> error_ids = {
        % for item in data['errors']['ids']:
        "${item}",
        % endfor
    };

    if (error_ids.contains(id))
    {
        return !default_return;
    }
    % endif

    return default_return;
}

} // namespace details
} // namespace lg2
