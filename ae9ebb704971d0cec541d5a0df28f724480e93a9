{
  "comments": [
    {
      "key": {
        "uuid": "67cb64cd_c8a7b399",
        "filename": "docs/structured-logging.md",
        "patchSetId": 1
      },
      "lineNbr": 26,
      "author": {
        "id": 1000879
      },
      "writtenOn": "2021-07-28T11:03:16Z",
      "side": 1,
      "message": "Could you add couple examples that will illustrate the benefit and show where structured logging have benefits against free-form.",
      "range": {
        "startLine": 20,
        "startChar": 0,
        "endLine": 26,
        "endChar": 67
      },
      "revId": "ae9ebb704971d0cec541d5a0df28f724480e93a9",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a8afdd20_2add4468",
        "filename": "docs/structured-logging.md",
        "patchSetId": 1
      },
      "lineNbr": 26,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2021-07-28T15:30:45Z",
      "side": 1,
      "message": "Sure.",
      "parentUuid": "67cb64cd_c8a7b399",
      "range": {
        "startLine": 20,
        "startChar": 0,
        "endLine": 26,
        "endChar": 67
      },
      "revId": "ae9ebb704971d0cec541d5a0df28f724480e93a9",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2aff27cd_e06afaf6",
        "filename": "docs/structured-logging.md",
        "patchSetId": 1
      },
      "lineNbr": 41,
      "author": {
        "id": 1000879
      },
      "writtenOn": "2021-07-28T11:03:16Z",
      "side": 1,
      "message": "I think it is also worth to add to this document separate section about log levels usage.",
      "range": {
        "startLine": 41,
        "startChar": 8,
        "endLine": 41,
        "endChar": 36
      },
      "revId": "ae9ebb704971d0cec541d5a0df28f724480e93a9",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c104ffc6_58cb3526",
        "filename": "docs/structured-logging.md",
        "patchSetId": 1
      },
      "lineNbr": 41,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2021-07-28T15:30:45Z",
      "side": 1,
      "message": "As in what the log levels are or how they should be used?  We haven\u0027t previously defined how they should be used, but I think the syslog man page does give a description.  I could reference or duplicate their \"meaning\" for various log levels if you like.",
      "parentUuid": "2aff27cd_e06afaf6",
      "range": {
        "startLine": 41,
        "startChar": 8,
        "endLine": 41,
        "endChar": 36
      },
      "revId": "ae9ebb704971d0cec541d5a0df28f724480e93a9",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fd474e06_50b22dc1",
        "filename": "docs/structured-logging.md",
        "patchSetId": 1
      },
      "lineNbr": 41,
      "author": {
        "id": 1000879
      },
      "writtenOn": "2021-07-28T15:58:38Z",
      "side": 1,
      "message": "I think, reference to loglevel would be enough, just to define that we use the levels according this recommendations.\nOther thing I also thought is how the log levels works under the hood, e.g. how to enable debug messages to be printed.",
      "parentUuid": "c104ffc6_58cb3526",
      "range": {
        "startLine": 41,
        "startChar": 8,
        "endLine": 41,
        "endChar": 36
      },
      "revId": "ae9ebb704971d0cec541d5a0df28f724480e93a9",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b45372c1_62df249f",
        "filename": "docs/structured-logging.md",
        "patchSetId": 1
      },
      "lineNbr": 60,
      "author": {
        "id": 1000004
      },
      "writtenOn": "2021-07-28T12:35:23Z",
      "side": 1,
      "message": "Anyway to put the formatted data in different parts of the string? Something like this:\n\nlg2::level(\"Error talking to\", \"TAG0\", \"value\", \"error code is\", \"TAG1\", lg2::hex, 2);",
      "revId": "ae9ebb704971d0cec541d5a0df28f724480e93a9",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7496781a_f5371d35",
        "filename": "docs/structured-logging.md",
        "patchSetId": 1
      },
      "lineNbr": 60,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2021-07-28T15:30:45Z",
      "side": 1,
      "message": "I have no intention to support that, no.  The example you gave is nearly impossible to disambiguate at compile-time and any kind of formatting support like that would be a significant increase in code-size generated.  (The lg2 code is actually more compact than log right now, but both of them are mostly just shifting values onto a stack.  What you\u0027re proposing would require building strings in the caller-context.)\n\nI think the string you would have liked this to generate was something like:\n\n  \"Error talking to {value} error code is {0x2}\" (but without the {}\u0027s).\n\nThe implementation that is done would transform as follows:\n\n  lg2::error(\"Error talking to entity.\", \"ENTITY\", lg2::primary, \"value\", \"ERRNO\", lg2::primary | lg2::hex, 2);\n\n  \"Error talking to entity. ENTITY\u003dvalue ERRNO\u003d0x2\"\n\nThese two contain the same information.  The second is not significantly less usable for a human, is structured, and has very little code overhead.",
      "parentUuid": "b45372c1_62df249f",
      "revId": "ae9ebb704971d0cec541d5a0df28f724480e93a9",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b03c256d_cb979518",
        "filename": "docs/structured-logging.md",
        "patchSetId": 1
      },
      "lineNbr": 60,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2021-07-28T23:27:32Z",
      "side": 1,
      "message": "This is roughly what I\u0027m talking about in my feedback on the list. How I\u0027d like to use this is:\n\n lg2::error(\"Error talking to {ENTITY} error code is {ERRNO}\", \"ENTITY\", value, \"ERRNO\", 2);\n\nThat is, we pass a format string to lg2::error(), and lg2::error() interpolates the structured values passed into the format string. If the format string doesn\u0027t contain specifiers for particular structured values they\u0027re simply omitted. The journal is sent the rendered string as MESSAGE, along with the structured values.",
      "parentUuid": "7496781a_f5371d35",
      "revId": "ae9ebb704971d0cec541d5a0df28f724480e93a9",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b05392e4_2fac908c",
        "filename": "docs/structured-logging.md",
        "patchSetId": 1
      },
      "lineNbr": 76,
      "author": {
        "id": 1000044
      },
      "writtenOn": "2021-07-28T02:19:51Z",
      "side": 1,
      "message": "It\u0027s not clear how the flags should be used.\nDoes field8 means it will print like `%08x`?",
      "range": {
        "startLine": 76,
        "startChar": 2,
        "endLine": 76,
        "endChar": 43
      },
      "revId": "ae9ebb704971d0cec541d5a0df28f724480e93a9",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "54007cf5_f649b639",
        "filename": "docs/structured-logging.md",
        "patchSetId": 1
      },
      "lineNbr": 76,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2021-07-28T02:30:47Z",
      "side": 1,
      "message": "I can try to improve the wording here.  What this does is approximately:\n\n  (hex | field8) ~\u003d \"0x%02x\"\n  (bin | field8) ~\u003d \"0b%08b\" (if %b were a printf format for binary).",
      "parentUuid": "b05392e4_2fac908c",
      "range": {
        "startLine": 76,
        "startChar": 2,
        "endLine": 76,
        "endChar": 43
      },
      "revId": "ae9ebb704971d0cec541d5a0df28f724480e93a9",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3c64f011_3ec0b84e",
        "filename": "docs/structured-logging.md",
        "patchSetId": 1
      },
      "lineNbr": 76,
      "author": {
        "id": 1000044
      },
      "writtenOn": "2021-07-28T02:35:22Z",
      "side": 1,
      "message": "Yup, I figured it by checking the code. But it could be better to make it clear here.",
      "parentUuid": "54007cf5_f649b639",
      "range": {
        "startLine": 76,
        "startChar": 2,
        "endLine": 76,
        "endChar": 43
      },
      "revId": "ae9ebb704971d0cec541d5a0df28f724480e93a9",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a9286514_b1d975cb",
        "filename": "docs/structured-logging.md",
        "patchSetId": 1
      },
      "lineNbr": 76,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2021-07-28T02:48:49Z",
      "side": 1,
      "message": "Will do (in a future patch set).  I probably won\u0027t push up a new patch set immediately in order to gather additional feedback on this whole sequence without contributing to additional noise.",
      "parentUuid": "3c64f011_3ec0b84e",
      "range": {
        "startLine": 76,
        "startChar": 2,
        "endLine": 76,
        "endChar": 43
      },
      "revId": "ae9ebb704971d0cec541d5a0df28f724480e93a9",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bcb21722_8e9e6846",
        "filename": "docs/structured-logging.md",
        "patchSetId": 1
      },
      "lineNbr": 79,
      "author": {
        "id": 1000044
      },
      "writtenOn": "2021-07-28T02:35:22Z",
      "side": 1,
      "message": "Usually one prints logs and expect all the information could be shown by default (e.g. journalctl) without extra argument (e.g. -o json-pretty)\n\nThis is an opt-in flag to indicate the metadata should be printed in the message, and is not used by default.\nIs it better to default to use this flag and add an opt-out flag to not print the meta?\nOr possibly we could just remove this flag and always make \"primary\", so that it\u0027s easier to use.",
      "revId": "ae9ebb704971d0cec541d5a0df28f724480e93a9",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9901387f_b0f901bb",
        "filename": "docs/structured-logging.md",
        "patchSetId": 1
      },
      "lineNbr": 79,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2021-07-28T02:48:49Z",
      "side": 1,
      "message": "I expect this to be one area of contention that I\u0027d like feedback on.  It would be simple, from a code perspective, to make \u0027primary\u0027 the default.  \n\nMy expectation is that most of the time humans don\u0027t actually need ALL of the data and I\u0027d like developers to think a little bit about which fields are really needed rather than just duplicating everything in the message.\n\nI could be swayed with overwhelming feedback that this is not worth the effort.  On the surface it seems kind of pointless though to use the journal if we\u0027re just putting everything into a syslog-style message.",
      "parentUuid": "bcb21722_8e9e6846",
      "revId": "ae9ebb704971d0cec541d5a0df28f724480e93a9",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c7c2843e_e0c46c00",
        "filename": "docs/structured-logging.md",
        "patchSetId": 1
      },
      "lineNbr": 79,
      "author": {
        "id": 1000879
      },
      "writtenOn": "2021-07-28T11:03:16Z",
      "side": 1,
      "message": "Well, most cases syslog-style message much more useful for humans. Having this we should think about what information is optional.\nTo be honest, the journalctl\u0027s UX is not so great and requesting metadata became ugly work which I want to avoid as much as possible (I mean, it is not so easy to get required log entry with `journalctl --output\u003dverbose`).",
      "parentUuid": "9901387f_b0f901bb",
      "revId": "ae9ebb704971d0cec541d5a0df28f724480e93a9",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d7a7c98d_deac3cd4",
        "filename": "docs/structured-logging.md",
        "patchSetId": 1
      },
      "lineNbr": 79,
      "author": {
        "id": 1000004
      },
      "writtenOn": "2021-07-28T12:35:23Z",
      "side": 1,
      "message": "I\u0027d vote this be the default and people can opt out. In pretty much every case I\u0027m looking at the journal, I\u0027d like to see this data.",
      "revId": "ae9ebb704971d0cec541d5a0df28f724480e93a9",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "59793802_70d5be69",
        "filename": "docs/structured-logging.md",
        "patchSetId": 1
      },
      "lineNbr": 112,
      "author": {
        "id": 1000879
      },
      "writtenOn": "2021-07-28T11:03:16Z",
      "side": 1,
      "message": "Can it be also implemented for old API?",
      "range": {
        "startLine": 110,
        "startChar": 64,
        "endLine": 112,
        "endChar": 43
      },
      "revId": "ae9ebb704971d0cec541d5a0df28f724480e93a9",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ba6cd255_0909b264",
        "filename": "docs/structured-logging.md",
        "patchSetId": 1
      },
      "lineNbr": 112,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2021-07-28T15:30:45Z",
      "side": 1,
      "message": "It could.  I don\u0027t intend to do that right now.",
      "parentUuid": "59793802_70d5be69",
      "range": {
        "startLine": 110,
        "startChar": 64,
        "endLine": 112,
        "endChar": 43
      },
      "revId": "ae9ebb704971d0cec541d5a0df28f724480e93a9",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a44f2377_277b592b",
        "filename": "docs/structured-logging.md",
        "patchSetId": 1
      },
      "lineNbr": 114,
      "author": {
        "id": 1000879
      },
      "writtenOn": "2021-07-28T11:03:16Z",
      "side": 1,
      "message": "Please, add here some examples of how message with \"primary\" parameter looks like.",
      "range": {
        "startLine": 114,
        "startChar": 1,
        "endLine": 114,
        "endChar": 24
      },
      "revId": "ae9ebb704971d0cec541d5a0df28f724480e93a9",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bec83578_bb3ebb02",
        "filename": "docs/structured-logging.md",
        "patchSetId": 1
      },
      "lineNbr": 114,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2021-07-28T15:30:45Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "a44f2377_277b592b",
      "range": {
        "startLine": 114,
        "startChar": 1,
        "endLine": 114,
        "endChar": 24
      },
      "revId": "ae9ebb704971d0cec541d5a0df28f724480e93a9",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0b555666_4b2d01f8",
        "filename": "docs/structured-logging.md",
        "patchSetId": 1
      },
      "lineNbr": 128,
      "author": {
        "id": 1000879
      },
      "writtenOn": "2021-07-28T11:03:16Z",
      "side": 1,
      "message": "Does this mean that the message became \"free-form\" but with metadata, which duplicates parameters?",
      "range": {
        "startLine": 126,
        "startChar": 24,
        "endLine": 128,
        "endChar": 10
      },
      "revId": "ae9ebb704971d0cec541d5a0df28f724480e93a9",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "00b24cb9_4069e7a2",
        "filename": "docs/structured-logging.md",
        "patchSetId": 1
      },
      "lineNbr": 128,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2021-07-28T15:30:45Z",
      "side": 1,
      "message": "I gave a reply to Andrew with an example but will include one in this section.\n\n  lg2::error(\"Error talking to entity.\", \"ENTITY\", lg2::primary, \"value\", \"ERRNO\", lg2::primary | lg2::hex, 2);\n\n  \"Error talking to entity. ENTITY\u003dvalue ERRNO\u003d0x2\"",
      "parentUuid": "0b555666_4b2d01f8",
      "range": {
        "startLine": 126,
        "startChar": 24,
        "endLine": 128,
        "endChar": 10
      },
      "revId": "ae9ebb704971d0cec541d5a0df28f724480e93a9",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d917637e_cfe6cb77",
        "filename": "docs/structured-logging.md",
        "patchSetId": 1
      },
      "lineNbr": 128,
      "author": {
        "id": 1000879
      },
      "writtenOn": "2021-07-28T15:58:38Z",
      "side": 1,
      "message": "Am I right that now this \"value\" stored twice: as metadata and as part of the message? I believe this should be mentioned in description of \"primary\" option to explicitly point that this will affect log size.",
      "parentUuid": "00b24cb9_4069e7a2",
      "range": {
        "startLine": 126,
        "startChar": 24,
        "endLine": 128,
        "endChar": 10
      },
      "revId": "ae9ebb704971d0cec541d5a0df28f724480e93a9",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "271ed5ad_e0192f7b",
        "filename": "docs/structured-logging.md",
        "patchSetId": 1
      },
      "lineNbr": 128,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2021-07-28T16:05:24Z",
      "side": 1,
      "message": "Yes.  Good point.  And that\u0027s partially why ideally not everything is in `primary`.\n\nMy opinion is we want other machines to be able to use the journal-metadata, because there is no parsing and ambiguity, but we want humans to be able to use the message.  So there has to be enough in the message for what a human most-likely needs at a cursory investigation.",
      "parentUuid": "d917637e_cfe6cb77",
      "range": {
        "startLine": 126,
        "startChar": 24,
        "endLine": 128,
        "endChar": 10
      },
      "revId": "ae9ebb704971d0cec541d5a0df28f724480e93a9",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b64f7111_52fc4545",
        "filename": "docs/structured-logging.md",
        "patchSetId": 1
      },
      "lineNbr": 134,
      "author": {
        "id": 1000879
      },
      "writtenOn": "2021-07-28T11:03:16Z",
      "side": 1,
      "message": "Once you put such statement, you also should add some recommendation on what should not be \"primary\" and why.",
      "revId": "ae9ebb704971d0cec541d5a0df28f724480e93a9",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    }
  ]
}