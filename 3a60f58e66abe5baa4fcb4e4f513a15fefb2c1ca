{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "e5afd252_761703e1",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1000008
      },
      "writtenOn": "2024-04-17T14:50:43Z",
      "side": 1,
      "message": "Thanks for the updates.\n\nSo there are multiple event log implementations today:\n\nThe original one, phosphor-logging, that uses the Logging.Entry interface on D-Bus for each entry.  And that one has 2 APIs for creating events, its original one, which which uses the journal, and the newer dbus one (see https://github.com/openbmc/phosphor-logging/blob/master/README.md#creating-event-logs-in-code)\n\nAnd then the newer one that also writes to the journal, but then has rsyslog set up to pull those out into a separate file so that redfish can get them.  In fact, I can see that can also already be used by phosphor-sel-logger: https://github.com/openbmc/phosphor-sel-logger/blob/master/include/threshold_event_monitor.hpp#L327\n\nWith whats above, there\u0027s already 2 ways event logs can already be written to the journal today.  So I don\u0027t think we can just enable this across the board, because even for people that using phosphor-logging for their event logs they would get duplicate journal entries per log when they use the original report\u003c\u003e() and commit\u003c\u003e() APIs, which a lot of older code does.  Also I heard there is a revamp coming that will make  people want to use it if they aren\u0027t already so they can get better redfish logs.\n\nAll of that being said, if this would just be hidden behind a meson option I wouldn\u0027t be against it.",
      "revId": "3a60f58e66abe5baa4fcb4e4f513a15fefb2c1ca",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8d93cef9_5524fd1d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1000936
      },
      "writtenOn": "2024-04-22T10:30:14Z",
      "side": 1,
      "message": "Hello Matt,\n\n\u003e So there are multiple event log implementations today:\n\nAs far as I can tell we have just two _mutually exclusive_ ways to get SEL records exposed via Redfish.\n\nThe bmcweb Meson `redfish-dbus-log` option enables either https://github.com/openbmc/bmcweb/blob/master/redfish-core/src/redfish.cpp#L129 the clumsy method of reading from `/var/log/redfish` generated by special company-specific rsyslog configuration such as https://github.com/openbmc/openbmc/blob/5b33e7a86d459dde90a4b4d9f50c121f7932e95e/meta-facebook/recipes-extended/rsyslog/rsyslog/rsyslog.conf#L48 or the OpenBMC documented (in phosphor-dbus-interfaces) D-Bus SEL API https://github.com/openbmc/bmcweb/blob/master/redfish-core/src/redfish.cpp#L167 , not both at the same time.\n\nThe phosphor-sel-logger option `send-to-logger` is also choosing between two distinct methods of logging events: https://github.com/openbmc/phosphor-sel-logger/blob/master/src/sel_logger.cpp#L204 , again, it either generates a Journal entry with the special `REDFISH_MESSAGE_ID` field or it sends it to OpenBMC logger service, and never both. Same about the other daemons that write SEL entries, they all either specify explicit `REDFISH_MESSAGE_ID` field in systemd journal or they tell the logger (via D-Bus or by throwing an exception and \"commiting\" it) to create an entry in the D-Bus interface.\n\n\u003e With whats above, there\u0027s already 2 ways event logs can already be written to the journal today.  So I don\u0027t think we can just enable this across the board, because even for people that using phosphor-logging for their event logs they would get duplicate journal entries per log when they use the original report\u003c\u003e() and commit\u003c\u003e() APIs, which a lot of older code does. \n\nWhen report/commit API is used the journal entry is created (without REDFISH_MESSAGE_ID!) and the current patch I\u0027m proposing is NOT coming into play at all because `Manager::_commit()` is called and `Manager::create()` (which I extend) isn\u0027t. When the D-Bus API is used the `Manager::create()` function is called as a handler and before this patch it didn\u0027t add anything at all to the journal.\n\nWhen any way to create a journal entry with REDFISH_MESSAGE_ID is used (be it `lg2::log\u003c\u003e` or `sd_journal_send`) the phosphor-logging daemon does nothing and no D-Bus entry is created at all.\n\n\u003e All of that being said, if this would just be hidden behind a meson option I wouldn\u0027t be against it.\n\nSo far I fail to see when it might be needed. Can you please outline a specific set of configuration options and events which would lead to duplicated entries anywhere? I might be missing some details so I outlined my current understanding in the hopes you can pinpoint something particular in it which is wrong (if anything is indeed wrong or missing). Thank you.",
      "parentUuid": "e5afd252_761703e1",
      "revId": "3a60f58e66abe5baa4fcb4e4f513a15fefb2c1ca",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "78ea9141_6c2a37ef",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1000936
      },
      "writtenOn": "2024-05-13T08:41:28Z",
      "side": 1,
      "message": "Hello Matt,\n\nPlease do not let this one slip through the cracks again, if there\u0027s something wrong about my understanding please help me see it so we can continue with the cleanest way possible.",
      "parentUuid": "8d93cef9_5524fd1d",
      "revId": "3a60f58e66abe5baa4fcb4e4f513a15fefb2c1ca",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}