{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "2d5f0d10_1aa452e1",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 32,
      "author": {
        "id": 1000008
      },
      "writtenOn": "2024-03-08T02:34:40Z",
      "side": 1,
      "message": "can you throw in some examples of what the output looks like?",
      "revId": "ec381c916d86def96e739bc30eb49de053a938d0",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1930727c_6e869be0",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 32,
      "author": {
        "id": 1000936
      },
      "writtenOn": "2024-03-08T15:17:49Z",
      "side": 1,
      "message": "I\u0027m not sure what output exactly you have in mind. With this patch journald gets the message with many fields but journalctl has many different kinds of outputs to represent the log entries. Then rsyslog also gets full information from journald and the end user can do filtering, transformations and redirections with RainerScript.\nHere\u0027s a sample of what rsyslog saves to a file using all defaults:\n```\n2024-03-05T18:09:18.647251+00:00 g2 phosphor-log-manager[267]: Test message arg1\u003d1value1 arg2\u003dvalue2\n```\nproduced by a manual D-Bus call:\n```\n# busctl call xyz.openbmc_project.Logging /xyz/openbmc_project/logging xyz.openbmc_project.Logging.Create Create \u0027ssa{ss}\u0027 \"Test message\" xyz.openbmc_project.Logging.Entry.Level.Error 2 arg1 1value1 arg2 value2\n```\nWould that be enough of an example? Or do you want something from `phosphor-sel-logger` specifically?",
      "parentUuid": "2d5f0d10_1aa452e1",
      "revId": "ec381c916d86def96e739bc30eb49de053a938d0",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "606e045e_d7f52d83",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 32,
      "author": {
        "id": 1000008
      },
      "writtenOn": "2024-03-10T05:03:37Z",
      "side": 1,
      "message": "Actually, I think I\u0027m missing something.  Why aren\u0027t you just using lg2 here?",
      "parentUuid": "1930727c_6e869be0",
      "revId": "ec381c916d86def96e739bc30eb49de053a938d0",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c1c1d846_5568efea",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 32,
      "author": {
        "id": 1000936
      },
      "writtenOn": "2024-03-10T08:47:35Z",
      "side": 1,
      "message": "phosphor-sel-logger isn\u0027t using lg2 or other phosphor-logging features because of https://gerrit.openbmc.org/c/openbmc/phosphor-sel-logger/+/62687 . In the current patch we are discussing I could have used something like `lg2::log\u003cisev\u003e(syslog_msg)` I guess if it\u0027s guaranteed to never create a D-Bus entry on its own.\n\nAnd talking about never, I clearly have no idea about the anticipated future of this code. What is the plan with the logging exactly? Will some machinery be added to support multiple hosts SELs? Will that patch to phosphor-sel-logger be eventually reverted? Will phosphor-logging gain full independence from rsyslog for all the available Redfish features?",
      "parentUuid": "606e045e_d7f52d83",
      "revId": "ec381c916d86def96e739bc30eb49de053a938d0",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5cf048f6_3c8f174a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000936
      },
      "writtenOn": "2024-04-11T19:32:54Z",
      "side": 1,
      "message": "I would appreciate more feedback on this one. Should I just remove [RFC] and re-submit, have we discussed enough? Or did I fail to clarify some point?",
      "revId": "ec381c916d86def96e739bc30eb49de053a938d0",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1d0a9471_45d79510",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000008
      },
      "writtenOn": "2024-04-11T19:46:15Z",
      "side": 1,
      "message": "What has been confusing me here is you mention the syslog in the commit message, but not the journal, but all this commit does is write to the journal, and for a reason that isn\u0027t clear to me doesn\u0027t use lg2 to do it.\n\nIf you were to redo the commit message to state that it writes the log entry fields to the journal, and why, and then also use lg2 to do it, or explain why it can\u0027t, it would help my understanding.",
      "parentUuid": "5cf048f6_3c8f174a",
      "revId": "ec381c916d86def96e739bc30eb49de053a938d0",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ce0050ce_8e00b36e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000936
      },
      "writtenOn": "2024-04-11T20:12:03Z",
      "side": 1,
      "message": "Thank you, now we\u0027re talking :) Let me clarify inline.\n\n\u003e What has been confusing me here is you mention the syslog in the commit message, but not the journal, but all this commit does is write to the journal, and for a reason that isn\u0027t clear to me doesn\u0027t use lg2 to do it.\n\nIndeed I see now how the commit message is confusing in this regard, I will make it clearer. The main idea was that we need those messages to eventually get to rsyslog for further processing (sending out via the syslog protocol, probably e-mails and what\u0027s not), and with the current configuration we have rsyslog getting everything from systemd journal so indeed the patch actually sends the message to the journal rather than rsyslog directly but the final aim is to get it into rsyslog.\n\nI will reword to set that straight.\n\n\n\u003e and then also use lg2 to do it, or explain why it can\u0027t, it would help my understanding.\n\nFirst question about using lg2 here is whether we\u0027re guaranteed to not get infinite recursion here in case you later decide that lg2 should be creating D-Bus objects when called. I find that unlikely but feel a need to ask.\n\nAnother point is that I can\u0027t call `lg2::log\u003cisev\u003e(syslog_msg)` as it is because `isev` isn\u0027t constant. I can try using `lg2::details::do_log(..)` internal function, does this sound OK to you?",
      "parentUuid": "1d0a9471_45d79510",
      "revId": "ec381c916d86def96e739bc30eb49de053a938d0",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4995f4d8_94b8651c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000008
      },
      "writtenOn": "2024-04-11T21:27:07Z",
      "side": 1,
      "message": "also, I had asked earlier - can you put a real example in the commit message of a journal entry that shows up from this code when a log entry from existing code is created?",
      "revId": "ec381c916d86def96e739bc30eb49de053a938d0",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ca194e30_3bf2a465",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000936
      },
      "writtenOn": "2024-04-11T21:36:11Z",
      "side": 1,
      "message": "\u003e also, I had asked earlier - can you put a real example in the commit message of a journal entry that shows up from this code when a log entry from existing code is created?\n\nNoted, I will.",
      "parentUuid": "4995f4d8_94b8651c",
      "revId": "ec381c916d86def96e739bc30eb49de053a938d0",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}