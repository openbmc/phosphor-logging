{
  "comments": [
    {
      "key": {
        "uuid": "d5024841_af12e692",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 22,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2021-08-06T00:57:38Z",
      "side": 1,
      "message": "Is this an idiomatic C++ approach to reporting errors in constexpr? Seems a bit bonkers, but hopefully people are unlikely to hit it?",
      "range": {
        "startLine": 20,
        "startChar": 0,
        "endLine": 22,
        "endChar": 65
      },
      "revId": "aa9cf6e18feec15c287e2ef2b85b805b7573299d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0d90b7cd_1daafef5",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 22,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2021-08-06T03:05:55Z",
      "side": 1,
      "message": "The trick I picked up from how {fmt} did it. There isnâ€™t really an idiomatic way, unfortunately. If you do a static assert the compiler complains about the of condition being non-constexpr. This seems to be the most straightforward way to get a decent error message reported.",
      "parentUuid": "d5024841_af12e692",
      "range": {
        "startLine": 20,
        "startChar": 0,
        "endLine": 22,
        "endChar": 65
      },
      "revId": "aa9cf6e18feec15c287e2ef2b85b805b7573299d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    }
  ]
}