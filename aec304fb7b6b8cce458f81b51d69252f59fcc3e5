{
  "comments": [
    {
      "key": {
        "uuid": "24c70494_fd4c5ee6",
        "filename": "lib/include/phosphor-logging/lg2.hpp",
        "patchSetId": 1
      },
      "lineNbr": 5,
      "author": {
        "id": 1000044
      },
      "writtenOn": "2021-07-28T02:28:32Z",
      "side": 1,
      "message": "Could use #endif here.\nIf the compiler does not support C++20, it will assert anyway.",
      "revId": "aec304fb7b6b8cce458f81b51d69252f59fcc3e5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d05be2ba_413e16ae",
        "filename": "lib/include/phosphor-logging/lg2.hpp",
        "patchSetId": 1
      },
      "lineNbr": 5,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2021-07-28T02:43:14Z",
      "side": 1,
      "message": "Yes, both cause the static_assert but GCC throws a mountain of errors if I change the #else to an #endif.  It is almost 120 lines of errors to sift through to find this static_assert.",
      "parentUuid": "24c70494_fd4c5ee6",
      "revId": "aec304fb7b6b8cce458f81b51d69252f59fcc3e5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "67534b73_3fb7361d",
        "filename": "lib/include/phosphor-logging/lg2.hpp",
        "patchSetId": 1
      },
      "lineNbr": 5,
      "author": {
        "id": 1000131
      },
      "writtenOn": "2021-07-28T07:52:50Z",
      "side": 1,
      "message": "We could use `#error phosphor-logging ...\u0027 instead of `static_assert()`.",
      "parentUuid": "d05be2ba_413e16ae",
      "revId": "aec304fb7b6b8cce458f81b51d69252f59fcc3e5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b034996e_0025f95c",
        "filename": "lib/include/phosphor-logging/lg2.hpp",
        "patchSetId": 1
      },
      "lineNbr": 5,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2021-07-28T15:19:10Z",
      "side": 1,
      "message": "Sure, I can switch to #error.  It seems roughly equivalent.\n\nThere is no change in the number of errors displayed between:\n\n   #if ...\n   #error ...\n   #endif\n\nOr:\n  \n   #if ...\n   static_assert(...)\n   #endif\n\nBoth cases the parser continues interpreting past the #error/static_assert and throws lots of needless errors about not understanding \u0027concept\u0027 and many other C++20-only syntax errors.  From a usability perspective I think it is much better to keep the #endif at the bottom of the file.",
      "parentUuid": "67534b73_3fb7361d",
      "revId": "aec304fb7b6b8cce458f81b51d69252f59fcc3e5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "165737dc_416172a3",
        "filename": "lib/include/phosphor-logging/lg2.hpp",
        "patchSetId": 1
      },
      "lineNbr": 5,
      "author": {
        "id": 1000044
      },
      "writtenOn": "2021-07-29T02:52:48Z",
      "side": 1,
      "message": "Ack\n\nThen it is really better to use `#else` here.",
      "parentUuid": "b034996e_0025f95c",
      "revId": "aec304fb7b6b8cce458f81b51d69252f59fcc3e5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    }
  ]
}