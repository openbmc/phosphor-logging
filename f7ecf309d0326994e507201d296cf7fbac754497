{
  "comments": [
    {
      "key": {
        "uuid": "7671b323_c0843973",
        "filename": "extensions/openpower-pels/src.cpp",
        "patchSetId": 10
      },
      "lineNbr": 1401,
      "author": {
        "id": 1000008
      },
      "writtenOn": "2021-08-30T18:35:16Z",
      "side": 1,
      "message": "so sorry for missing this before, but these three calls are making 3 of the exact same GetSubTree calls.  I would like to avoid that so we make the minimum number of d-bus calls possible.  I think you could simplify the code to have \n\nstd::tuple\u003cbool, bool, bool\u003e DataInterface::getDumpStatus()\n\nand it hardcodes the dump types within the function and does one GetSubTree and returns the results, so you could do like:\n\nauto [hasBmcDump, hasHostbootDump, hasResourceDump] \u003d dataIface.getDumpStatus();",
      "revId": "f7ecf309d0326994e507201d296cf7fbac754497",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9dbd7c64_3ada14b6",
        "filename": "extensions/openpower-pels/src.cpp",
        "patchSetId": 10
      },
      "lineNbr": 1401,
      "author": {
        "id": 1001062
      },
      "writtenOn": "2021-08-31T15:24:30Z",
      "side": 1,
      "message": "Yes its 3 calls - one per dump type. Actually when I started writing this code I planned to do it everything inside data interface function itself but then decided against it bcoz of following:\n- making function complex\n- to clearly separate out the params between src and data interface files\n- make data interface function independent \u0026 seamless from adding of new dump types as needed\n\nNow as you have mentioned, will modify it in a bit diff way that could still meet above points.",
      "parentUuid": "7671b323_c0843973",
      "revId": "f7ecf309d0326994e507201d296cf7fbac754497",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    }
  ]
}