{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "36e28f68_5a477d60",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 7,
      "author": {
        "id": 1000008
      },
      "writtenOn": "2024-08-14T14:21:01Z",
      "side": 1,
      "message": "nit: how about just \u0027Add\u0027",
      "range": {
        "startLine": 7,
        "startChar": 4,
        "endLine": 7,
        "endChar": 11
      },
      "revId": "ddc70ef8134701162c22518ed9a7264ed1d303ca",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "69fe0607_bf657ec1",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 7,
      "author": {
        "id": 1000427
      },
      "writtenOn": "2024-08-14T15:43:09Z",
      "side": 1,
      "message": "How about `PEL: Add DIMMs DRAM Manufacturer Info`?",
      "parentUuid": "36e28f68_5a477d60",
      "range": {
        "startLine": 7,
        "startChar": 4,
        "endLine": 7,
        "endChar": 11
      },
      "revId": "ddc70ef8134701162c22518ed9a7264ed1d303ca",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2c37d837_ba67d009",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 7,
      "author": {
        "id": 1001993
      },
      "writtenOn": "2024-08-19T15:32:36Z",
      "side": 1,
      "message": "I felt \u0027DIMMs DRAM\u0027 phrase might be redundant. hence slightly modified",
      "parentUuid": "69fe0607_bf657ec1",
      "range": {
        "startLine": 7,
        "startChar": 4,
        "endLine": 7,
        "endChar": 11
      },
      "revId": "ddc70ef8134701162c22518ed9a7264ed1d303ca",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "115e4235_1f4e69db",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 9,
      "author": {
        "id": 1000008
      },
      "writtenOn": "2024-08-14T14:21:01Z",
      "side": 1,
      "message": "nit:  how about:  When a PEL calls out a DIMM FRU.",
      "revId": "ddc70ef8134701162c22518ed9a7264ed1d303ca",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7f544ca5_54a4d96c",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 9,
      "author": {
        "id": 1001993
      },
      "writtenOn": "2024-08-21T04:43:53Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "115e4235_1f4e69db",
      "revId": "ddc70ef8134701162c22518ed9a7264ed1d303ca",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2fdd3b8d_21edef32",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 12,
      "author": {
        "id": 1000008
      },
      "writtenOn": "2024-08-14T14:21:01Z",
      "side": 1,
      "message": "nit:  I think this needs to be split up into another sentence, I don\u0027t quite follow it as one.",
      "revId": "ddc70ef8134701162c22518ed9a7264ed1d303ca",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "69f91057_95b1f821",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 12,
      "author": {
        "id": 1000427
      },
      "writtenOn": "2024-08-14T15:43:09Z",
      "side": 1,
      "message": "+1 and I feel a few statement repeated.\n\nAlso, please add why are you adding these details now like describe problem statement in generic for this solution.",
      "parentUuid": "2fdd3b8d_21edef32",
      "revId": "ddc70ef8134701162c22518ed9a7264ed1d303ca",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5097276b_498db7c9",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 12,
      "author": {
        "id": 1001993
      },
      "writtenOn": "2024-08-19T15:32:36Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "69f91057_95b1f821",
      "revId": "ddc70ef8134701162c22518ed9a7264ed1d303ca",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fd311259_b49ae05c",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 21,
      "author": {
        "id": 1000427
      },
      "writtenOn": "2024-08-14T15:43:09Z",
      "side": 1,
      "message": "Ah you added here. I feel, we could describe the purpose \"why\" of this commit in beginning.",
      "revId": "ddc70ef8134701162c22518ed9a7264ed1d303ca",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ccee9b1e_c075d10d",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 21,
      "author": {
        "id": 1000427
      },
      "writtenOn": "2024-08-14T15:43:09Z",
      "side": 1,
      "message": "Please avoid internal terms in the OpenSource project.",
      "range": {
        "startLine": 21,
        "startChar": 35,
        "endLine": 21,
        "endChar": 47
      },
      "revId": "ddc70ef8134701162c22518ed9a7264ed1d303ca",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "15f7e73e_63b125fd",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 21,
      "author": {
        "id": 1001993
      },
      "writtenOn": "2024-08-19T15:32:36Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "ccee9b1e_c075d10d",
      "range": {
        "startLine": 21,
        "startChar": 35,
        "endLine": 21,
        "endChar": 47
      },
      "revId": "ddc70ef8134701162c22518ed9a7264ed1d303ca",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3f50bef4_ec5eb839",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 21,
      "author": {
        "id": 1001993
      },
      "writtenOn": "2024-08-19T15:32:36Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "fd311259_b49ae05c",
      "revId": "ddc70ef8134701162c22518ed9a7264ed1d303ca",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6d2b433c_79105e06",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 54,
      "author": {
        "id": 1000008
      },
      "writtenOn": "2024-08-14T14:21:01Z",
      "side": 1,
      "message": "I think your code now has \u0027DIMMs Manu...\u0027  now?",
      "revId": "ddc70ef8134701162c22518ed9a7264ed1d303ca",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "dfc9d067_93f97bbf",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 54,
      "author": {
        "id": 1001993
      },
      "writtenOn": "2024-08-19T15:32:36Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "6d2b433c_79105e06",
      "revId": "ddc70ef8134701162c22518ed9a7264ed1d303ca",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "77b76a33_80913bfc",
        "filename": "extensions/openpower-pels/data_interface.cpp",
        "patchSetId": 4
      },
      "lineNbr": 939,
      "author": {
        "id": 1000427
      },
      "writtenOn": "2024-08-14T15:43:09Z",
      "side": 1,
      "message": "I think we will always use the PHAL API for non-DIMM callouts.\n\nOne of the goals of implementing a cache is to avoid the overhead of walking the PHAL device tree or repeated PHAL interactions when the same location code is called out multiple times for different reasons or at different times, right?.\n\nTherefore, I suggest maintaining a cache for all location codes and checking for DIMM-related ones.\n\nFor example, we could use something like:\n\n```\nstd::unordered_map\u003cLocationCode, bool\u003e locationCache;\n```\n\n@Matt, any thoughts on this approach? Or would it be better to stick with the PHAL API for non-DIMM cases?",
      "revId": "ddc70ef8134701162c22518ed9a7264ed1d303ca",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c154b7f5_5649b4b3",
        "filename": "extensions/openpower-pels/data_interface.cpp",
        "patchSetId": 4
      },
      "lineNbr": 939,
      "author": {
        "id": 1000008
      },
      "writtenOn": "2024-08-14T15:53:29Z",
      "side": 1,
      "message": "PHAL will always be enabled on a real system. I think just not in CI which is why the compile flags were put in.\n\nI like the map idea.",
      "parentUuid": "77b76a33_80913bfc",
      "revId": "ddc70ef8134701162c22518ed9a7264ed1d303ca",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f78d8646_f2cb35f0",
        "filename": "extensions/openpower-pels/data_interface.cpp",
        "patchSetId": 4
      },
      "lineNbr": 939,
      "author": {
        "id": 1001993
      },
      "writtenOn": "2024-08-19T15:32:36Z",
      "side": 1,
      "message": "Yes I also agree the map can reduce the overhead further more. Will try to incorporate",
      "parentUuid": "c154b7f5_5649b4b3",
      "revId": "ddc70ef8134701162c22518ed9a7264ed1d303ca",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "086ab34c_8467dc9b",
        "filename": "extensions/openpower-pels/data_interface.cpp",
        "patchSetId": 4
      },
      "lineNbr": 939,
      "author": {
        "id": 1000427
      },
      "writtenOn": "2024-08-20T04:28:54Z",
      "side": 1,
      "message": "Thanks for accepting.",
      "parentUuid": "f78d8646_f2cb35f0",
      "revId": "ddc70ef8134701162c22518ed9a7264ed1d303ca",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e229ea68_b444db00",
        "filename": "extensions/openpower-pels/data_interface.cpp",
        "patchSetId": 4
      },
      "lineNbr": 939,
      "author": {
        "id": 1000427
      },
      "writtenOn": "2024-08-21T04:57:51Z",
      "side": 1,
      "message": "Thanks for changing it.",
      "parentUuid": "086ab34c_8467dc9b",
      "revId": "ddc70ef8134701162c22518ed9a7264ed1d303ca",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ac5698ec_306842f7",
        "filename": "extensions/openpower-pels/data_interface.cpp",
        "patchSetId": 4
      },
      "lineNbr": 954,
      "author": {
        "id": 1000008
      },
      "writtenOn": "2024-08-14T14:21:01Z",
      "side": 1,
      "message": "would have also been fine to put the error into the journal.  it\u0027s no more likely to fail than line 905.",
      "revId": "ddc70ef8134701162c22518ed9a7264ed1d303ca",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "16a37061_6058b749",
        "filename": "extensions/openpower-pels/data_interface.cpp",
        "patchSetId": 4
      },
      "lineNbr": 954,
      "author": {
        "id": 1000427
      },
      "writtenOn": "2024-08-14T15:43:09Z",
      "side": 1,
      "message": "+1, or in the caller places with returned unexpected value.\n\nPeople might sometimes overlook the PEL debug data section.",
      "parentUuid": "ac5698ec_306842f7",
      "revId": "ddc70ef8134701162c22518ed9a7264ed1d303ca",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "53204b97_2351fcc4",
        "filename": "extensions/openpower-pels/data_interface.cpp",
        "patchSetId": 4
      },
      "lineNbr": 954,
      "author": {
        "id": 1001993
      },
      "writtenOn": "2024-08-19T15:32:36Z",
      "side": 1,
      "message": "Added journal trace at the caller.",
      "parentUuid": "16a37061_6058b749",
      "revId": "ddc70ef8134701162c22518ed9a7264ed1d303ca",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "60d98d33_87dced38",
        "filename": "extensions/openpower-pels/data_interface.hpp",
        "patchSetId": 4
      },
      "lineNbr": 509,
      "author": {
        "id": 1000427
      },
      "writtenOn": "2024-08-14T15:43:09Z",
      "side": 1,
      "message": "Please document about the function parameters and returns.",
      "revId": "ddc70ef8134701162c22518ed9a7264ed1d303ca",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "836fdd30_fd0d6bba",
        "filename": "extensions/openpower-pels/data_interface.hpp",
        "patchSetId": 4
      },
      "lineNbr": 509,
      "author": {
        "id": 1001993
      },
      "writtenOn": "2024-08-19T15:32:36Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "60d98d33_87dced38",
      "revId": "ddc70ef8134701162c22518ed9a7264ed1d303ca",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4c607c6d_33f7d8cb",
        "filename": "extensions/openpower-pels/entry_points.cpp",
        "patchSetId": 4
      },
      "lineNbr": 81,
      "author": {
        "id": 1000008
      },
      "writtenOn": "2024-08-14T14:21:01Z",
      "side": 1,
      "message": "ideally, this would have been a standalone commit, but at this point isn\u0027t necessary.\n\nIt would be good it add it to the commit message how you\u0027re changing this.",
      "revId": "ddc70ef8134701162c22518ed9a7264ed1d303ca",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bcf2fe83_f16928ae",
        "filename": "extensions/openpower-pels/entry_points.cpp",
        "patchSetId": 4
      },
      "lineNbr": 81,
      "author": {
        "id": 1000427
      },
      "writtenOn": "2024-08-14T15:43:09Z",
      "side": 1,
      "message": "+1, My preference would be a separate commit. I am fine either way :)",
      "parentUuid": "4c607c6d_33f7d8cb",
      "revId": "ddc70ef8134701162c22518ed9a7264ed1d303ca",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "aea7f9a4_312b0dca",
        "filename": "extensions/openpower-pels/entry_points.cpp",
        "patchSetId": 4
      },
      "lineNbr": 81,
      "author": {
        "id": 1001993
      },
      "writtenOn": "2024-08-19T15:32:36Z",
      "side": 1,
      "message": "ok will mention in the commit msg",
      "parentUuid": "bcf2fe83_f16928ae",
      "revId": "ddc70ef8134701162c22518ed9a7264ed1d303ca",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8d2b8cc9_a1632c45",
        "filename": "extensions/openpower-pels/meson.build",
        "patchSetId": 4
      },
      "lineNbr": 139,
      "author": {
        "id": 1000008
      },
      "writtenOn": "2024-08-14T14:21:01Z",
      "side": 1,
      "message": "why did this need to be added?",
      "revId": "ddc70ef8134701162c22518ed9a7264ed1d303ca",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "76968e7e_53d4bb17",
        "filename": "extensions/openpower-pels/meson.build",
        "patchSetId": 4
      },
      "lineNbr": 139,
      "author": {
        "id": 1001993
      },
      "writtenOn": "2024-08-21T04:43:53Z",
      "side": 1,
      "message": "The util.cpp file is added to resolve the linking error faced during development stage.\n\nDuring the peltool binary compilation, the DataInterface class constructor is invoking an util API getOSReleaseValue() which is defined in utils.cpp. Hence absence of util.cpp among the source file list throwed the linking error. \n\nOn further checking we noticed it is noticed the adding the util.cpp among \u0027libpel_sources\u0027 will be more accurate and hence moved to \u0027libpel_sources\u0027 from \u0027peltool_sources\u0027\n\nAdding the linking error faced also for reference \n\n\u003e [1/1] Linking target extensions/openpower-pels/peltool\nFAILED: extensions/openpower-pels/peltool c++  -o extensions/openpower-pels/peltool extensions/openpower-pels/peltool.p/tools_peltool.cpp.o extensions/openpower-pels/peltool.p/extended_user_data.cpp.o extensions/openpower-pels/peltool.p/src.cpp.o extensions/openpower-pels/peltool.p/user_data.cpp.o extensions/openpower-pels/peltool.p/user_data_json.cpp.o -Wl,--as-needed -Wl,--no-undefined \u0027-Wl,-rpath,$ORIGIN/../../lib:/usr/local/lib/x86_64-linux-gnu:/usr/local/lib\u0027 -Wl,-rpath-link,/esw/san5/arya/DIMM_ID/1060_june21_build/1060_Aug_6/ramesh/commit/phosphor-logging/buildTestsDisabled/lib -Wl,-rpath-link,/usr/local/lib/x86_64-linux-gnu -Wl,-rpath-link,/usr/local/lib -Wl,--start-group extensions/openpower-pels/libpel.a lib/libphosphor_logging.so.1.0.0 -lpython3.12 /usr/local/lib/x86_64-linux-gnu/libpldm.so /usr/local/lib/x86_64-linux-gnu/libsdbusplus.so /usr/lib/x86_64-linux-gnu/libsystemd.so /usr/local/lib/x86_64-linux-gnu/libsdeventplus.so /usr/local/lib/x86_64-linux-gnu/libstdplus.so /usr/local/lib/libfmt.so /usr/local/lib/x86_64-linux-gnu/libphosphor_dbus.so -Wl,--end-group -pthread\n/usr/bin/ld: extensions/openpower-pels/libpel.a.p/data_interface.cpp.o: in function `openpower::pels::DataInterface::readBMCFWVersion()\u0027:\n/esw/san5/arya/DIMM_ID/1060_june21_build/1060_Aug_6/commit/phosphor-logging/buildTestsDisabled/../extensions/openpower-pels/data_interface.cpp:297:(.text+0x582): undefined reference to `phosphor::logging::util::getOSReleaseValue(std::__cxx11::basic_string\u003cchar, std::char_traits\u003cchar\u003e, std::allocator\u003cchar\u003e \u003e const\u0026)\u0027",
      "parentUuid": "8d2b8cc9_a1632c45",
      "revId": "ddc70ef8134701162c22518ed9a7264ed1d303ca",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "11f8d87f_041b58c0",
        "filename": "extensions/openpower-pels/meson.build",
        "patchSetId": 4
      },
      "lineNbr": 139,
      "author": {
        "id": 1000008
      },
      "writtenOn": "2024-08-21T18:48:12Z",
      "side": 1,
      "message": "I guess I don\u0027t follow why it stopped working?\n\nBut, it isn\u0027t really that big of a deal.",
      "parentUuid": "76968e7e_53d4bb17",
      "revId": "ddc70ef8134701162c22518ed9a7264ed1d303ca",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a1892f3a_4aa87c09",
        "filename": "extensions/openpower-pels/pel.cpp",
        "patchSetId": 4
      },
      "lineNbr": 742,
      "author": {
        "id": 1000008
      },
      "writtenOn": "2024-08-14T14:21:01Z",
      "side": 1,
      "message": "nit:  the guidelines say to always capitalize acronyms, so about about \u0027isDIMMCallout\u0027",
      "range": {
        "startLine": 742,
        "startChar": 9,
        "endLine": 742,
        "endChar": 21
      },
      "revId": "ddc70ef8134701162c22518ed9a7264ed1d303ca",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "764ea0d2_b18ece6f",
        "filename": "extensions/openpower-pels/pel.cpp",
        "patchSetId": 4
      },
      "lineNbr": 742,
      "author": {
        "id": 1001993
      },
      "writtenOn": "2024-08-19T15:32:36Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "a1892f3a_4aa87c09",
      "range": {
        "startLine": 742,
        "startChar": 9,
        "endLine": 742,
        "endChar": 21
      },
      "revId": "ddc70ef8134701162c22518ed9a7264ed1d303ca",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "69684e1d_bcc0edec",
        "filename": "extensions/openpower-pels/pel.cpp",
        "patchSetId": 4
      },
      "lineNbr": 771,
      "author": {
        "id": 1001993
      },
      "writtenOn": "2024-08-14T14:08:06Z",
      "side": 1,
      "message": "Missed adding the location code value here so that in case of multiple DIMM callouts, user could identify for which location code it failed. Will incorporate this also in next patch",
      "revId": "ddc70ef8134701162c22518ed9a7264ed1d303ca",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e1efa351_1c30b3f8",
        "filename": "extensions/openpower-pels/pel.cpp",
        "patchSetId": 4
      },
      "lineNbr": 771,
      "author": {
        "id": 1001993
      },
      "writtenOn": "2024-08-19T15:32:36Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "69684e1d_bcc0edec",
      "revId": "ddc70ef8134701162c22518ed9a7264ed1d303ca",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "02ef8d0e_13b27ef8",
        "filename": "extensions/openpower-pels/pel.cpp",
        "patchSetId": 4
      },
      "lineNbr": 1067,
      "author": {
        "id": 1000427
      },
      "writtenOn": "2024-08-14T15:43:09Z",
      "side": 1,
      "message": "I feel `DRAM Manufacturer ID` more readable since the parent key contains `DIMMs`.",
      "range": {
        "startLine": 1067,
        "startChar": 59,
        "endLine": 1067,
        "endChar": 74
      },
      "revId": "ddc70ef8134701162c22518ed9a7264ed1d303ca",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0de79f8d_080fe617",
        "filename": "extensions/openpower-pels/pel.cpp",
        "patchSetId": 4
      },
      "lineNbr": 1067,
      "author": {
        "id": 1001993
      },
      "writtenOn": "2024-08-19T15:32:36Z",
      "side": 1,
      "message": "Do we have separate manufacturers for DIMM and DRAMs?",
      "parentUuid": "02ef8d0e_13b27ef8",
      "range": {
        "startLine": 1067,
        "startChar": 59,
        "endLine": 1067,
        "endChar": 74
      },
      "revId": "ddc70ef8134701162c22518ed9a7264ed1d303ca",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "57207e97_ff081a38",
        "filename": "extensions/openpower-pels/pel.cpp",
        "patchSetId": 4
      },
      "lineNbr": 1067,
      "author": {
        "id": 1000427
      },
      "writtenOn": "2024-08-20T04:28:54Z",
      "side": 1,
      "message": "It could be. The DI property is primarily intended for DRAM within the DIMM inventory object, so we could have a separate manufacturer ID for the DIMM module.",
      "parentUuid": "0de79f8d_080fe617",
      "range": {
        "startLine": 1067,
        "startChar": 59,
        "endLine": 1067,
        "endChar": 74
      },
      "revId": "ddc70ef8134701162c22518ed9a7264ed1d303ca",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "367b0fb0_a069e89e",
        "filename": "extensions/openpower-pels/pel.cpp",
        "patchSetId": 4
      },
      "lineNbr": 1067,
      "author": {
        "id": 1001993
      },
      "writtenOn": "2024-08-21T04:43:53Z",
      "side": 1,
      "message": "Ok got your point. Modified as \u0027DRAM Manufacturer ID\u0027",
      "parentUuid": "57207e97_ff081a38",
      "range": {
        "startLine": 1067,
        "startChar": 59,
        "endLine": 1067,
        "endChar": 74
      },
      "revId": "ddc70ef8134701162c22518ed9a7264ed1d303ca",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1d002332_256a073c",
        "filename": "extensions/openpower-pels/pel.cpp",
        "patchSetId": 4
      },
      "lineNbr": 1071,
      "author": {
        "id": 1000427
      },
      "writtenOn": "2024-08-14T15:43:09Z",
      "side": 1,
      "message": "`DIMMs Additional Info` to make it more generic?",
      "range": {
        "startLine": 1071,
        "startChar": 19,
        "endLine": 1071,
        "endChar": 42
      },
      "revId": "ddc70ef8134701162c22518ed9a7264ed1d303ca",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e1f64cd2_d7788626",
        "filename": "extensions/openpower-pels/pel.cpp",
        "patchSetId": 4
      },
      "lineNbr": 1071,
      "author": {
        "id": 1001993
      },
      "writtenOn": "2024-08-19T15:32:36Z",
      "side": 1,
      "message": "Yes..Modified.",
      "parentUuid": "1d002332_256a073c",
      "range": {
        "startLine": 1071,
        "startChar": 19,
        "endLine": 1071,
        "endChar": 42
      },
      "revId": "ddc70ef8134701162c22518ed9a7264ed1d303ca",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f375683c_a7878f50",
        "filename": "test/openpower-pels/pel_test.cpp",
        "patchSetId": 4
      },
      "lineNbr": 910,
      "author": {
        "id": 1000008
      },
      "writtenOn": "2024-08-14T14:21:01Z",
      "side": 1,
      "message": "why change this one and the one below?",
      "revId": "ddc70ef8134701162c22518ed9a7264ed1d303ca",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f2317215_e799f7e6",
        "filename": "test/openpower-pels/pel_test.cpp",
        "patchSetId": 4
      },
      "lineNbr": 910,
      "author": {
        "id": 1000427
      },
      "writtenOn": "2024-08-14T15:43:09Z",
      "side": 1,
      "message": "I think we will enter [here](https://gerrit.openbmc.org/c/openbmc/phosphor-logging/+/72970/4/extensions/openpower-pels/data_interface.cpp#933) for the existing test case since the caller invoke `isDIMM` API always and cache will be empty.",
      "parentUuid": "f375683c_a7878f50",
      "revId": "ddc70ef8134701162c22518ed9a7264ed1d303ca",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1f6dc7be_46d0542a",
        "filename": "test/openpower-pels/pel_test.cpp",
        "patchSetId": 4
      },
      "lineNbr": 910,
      "author": {
        "id": 1000008
      },
      "writtenOn": "2024-08-21T18:48:12Z",
      "side": 1,
      "message": "I don\u0027t follow.  Are you saying that there is going to be extra fields added to this JSON so it won\u0027t match on how it was?",
      "parentUuid": "f2317215_e799f7e6",
      "revId": "ddc70ef8134701162c22518ed9a7264ed1d303ca",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "36f60797_6d7b7bbc",
        "filename": "test/openpower-pels/pel_test.cpp",
        "patchSetId": 4
      },
      "lineNbr": 910,
      "author": {
        "id": 1001993
      },
      "writtenOn": "2024-08-22T08:58:52Z",
      "side": 1,
      "message": "Yes . Earlier we had only \u0027SRC\u0027 Key for \u0027PEL Internal Debug Data\u0027. Hence checking the contents of \u0027PEL Internal Debug Data\u0027 will always pass.\n\nBut now we introduced \u0027DIMMs Info Fetch Error\u0027 also . Since PHAL is not enabled, we will be having the error log under \u0027DIMMs Info Fetch Error\u0027. Hence these test cases will fail if checked for \u0027PEL Internal Debug Data\u0027 only",
      "parentUuid": "1f6dc7be_46d0542a",
      "revId": "ddc70ef8134701162c22518ed9a7264ed1d303ca",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "898784d2_d3da20b2",
        "filename": "test/openpower-pels/pel_test.cpp",
        "patchSetId": 4
      },
      "lineNbr": 1309,
      "author": {
        "id": 1000008
      },
      "writtenOn": "2024-08-14T14:21:01Z",
      "side": 1,
      "message": "why are you using any_of here and not checking the result? i guess because it stops after find an entry?",
      "range": {
        "startLine": 1309,
        "startChar": 4,
        "endLine": 1309,
        "endChar": 23
      },
      "revId": "ddc70ef8134701162c22518ed9a7264ed1d303ca",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5555e6cb_89edae37",
        "filename": "test/openpower-pels/pel_test.cpp",
        "patchSetId": 4
      },
      "lineNbr": 1309,
      "author": {
        "id": 1000427
      },
      "writtenOn": "2024-08-14T15:43:09Z",
      "side": 1,
      "message": "I think so,\n\nIt could be tune a bit better\n\n```\nstd::pair\u003cbool, nlohmann::json\u003e getDimmInfo(const auto\u0026 pel)\n{\n   ...\n   bool hasDIMMInfo \u003d std::ranges::any_of(pel.optionalSections(), hasDimmInfo);\n   return std::make_pair(hasDIMMInfo, hasDimmInfo);\n}\n```\n\nThis boolean could be used as an additional check within the EXPECT_X() for various test cases. Just a suggestion—I\u0027m fine with the current implementation as well since your EXPECT_EQ will fail with an empty JSON object.",
      "parentUuid": "898784d2_d3da20b2",
      "range": {
        "startLine": 1309,
        "startChar": 4,
        "endLine": 1309,
        "endChar": 23
      },
      "revId": "ddc70ef8134701162c22518ed9a7264ed1d303ca",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "46d5bde0_59c28112",
        "filename": "test/openpower-pels/pel_test.cpp",
        "patchSetId": 4
      },
      "lineNbr": 1309,
      "author": {
        "id": 1001993
      },
      "writtenOn": "2024-08-19T15:32:36Z",
      "side": 1,
      "message": "@Matt , Yes since some PELs have multiple user data section and our intention find the UD with DIMM info . Hence stopping the further search once it finds the match.\n\n@Ramesh, It seems some typo here , return std::make_pair(hasDIMMInfo, hasDimmInfo); Did you meant \u0027dimmInfo\u0027 instead of \u0027hasDimmInfo\u0027?\nAs per the current logic , I feel return value of any_of is less important as I am comparing the fetched JSON object from the UD section with the expected json object.",
      "parentUuid": "5555e6cb_89edae37",
      "range": {
        "startLine": 1309,
        "startChar": 4,
        "endLine": 1309,
        "endChar": 23
      },
      "revId": "ddc70ef8134701162c22518ed9a7264ed1d303ca",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2163c1ba_66b1d91c",
        "filename": "test/openpower-pels/pel_test.cpp",
        "patchSetId": 4
      },
      "lineNbr": 1309,
      "author": {
        "id": 1000427
      },
      "writtenOn": "2024-08-20T04:28:54Z",
      "side": 1,
      "message": "\u003e @Ramesh, It seems some typo here , return std::make_pair(hasDIMMInfo, hasDimmInfo); Did you meant \u0027dimmInfo\u0027 instead of \u0027hasDimmInfo\u0027?\n\nah my bad, correct `dimmInfo`.\n\n\u003e I feel return value of any_of is less important as I am comparing the fetched JSON object from the UD section with the expected json object.\n\nHmm ok...",
      "parentUuid": "46d5bde0_59c28112",
      "range": {
        "startLine": 1309,
        "startChar": 4,
        "endLine": 1309,
        "endChar": 23
      },
      "revId": "ddc70ef8134701162c22518ed9a7264ed1d303ca",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7829a8d0_450187e0",
        "filename": "test/openpower-pels/pel_test.cpp",
        "patchSetId": 4
      },
      "lineNbr": 1309,
      "author": {
        "id": 1000008
      },
      "writtenOn": "2024-08-21T18:48:12Z",
      "side": 1,
      "message": "I think find_if may be more readable, but it would accomplish the same thing so it\u0027s fine how it is.",
      "parentUuid": "2163c1ba_66b1d91c",
      "range": {
        "startLine": 1309,
        "startChar": 4,
        "endLine": 1309,
        "endChar": 23
      },
      "revId": "ddc70ef8134701162c22518ed9a7264ed1d303ca",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7b55b4bb_cb548dae",
        "filename": "test/openpower-pels/pel_test.cpp",
        "patchSetId": 4
      },
      "lineNbr": 1372,
      "author": {
        "id": 1000008
      },
      "writtenOn": "2024-08-14T14:21:01Z",
      "side": 1,
      "message": "nit:  these are tabs.  if there aren\u0027t tabs anywhere else in this file then please convert them to spaces to be consistent.",
      "revId": "ddc70ef8134701162c22518ed9a7264ed1d303ca",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5a2c5f38_f024b688",
        "filename": "test/openpower-pels/pel_test.cpp",
        "patchSetId": 4
      },
      "lineNbr": 1372,
      "author": {
        "id": 1001993
      },
      "writtenOn": "2024-08-21T04:43:53Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "7b55b4bb_cb548dae",
      "revId": "ddc70ef8134701162c22518ed9a7264ed1d303ca",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "61915ea5_80816c54",
        "filename": "test/openpower-pels/pel_test.cpp",
        "patchSetId": 4
      },
      "lineNbr": 1439,
      "author": {
        "id": 1000008
      },
      "writtenOn": "2024-08-14T14:21:01Z",
      "side": 1,
      "message": "nit: trailing space",
      "revId": "ddc70ef8134701162c22518ed9a7264ed1d303ca",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4d1c9d99_20b33810",
        "filename": "test/openpower-pels/pel_test.cpp",
        "patchSetId": 4
      },
      "lineNbr": 1439,
      "author": {
        "id": 1001993
      },
      "writtenOn": "2024-08-19T15:32:36Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "61915ea5_80816c54",
      "revId": "ddc70ef8134701162c22518ed9a7264ed1d303ca",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}