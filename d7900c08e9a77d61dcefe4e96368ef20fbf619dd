{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "ac35126b_178c888d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2024-04-05T16:09:27Z",
      "side": 1,
      "message": "This was not what we agreed to on discord.\n\nIt is a pretty common practice for logging libraries to do exactly this. glog does the same thing where it detects the tty.\n\nIn many cases, users _want_ these logs if they are running by hand.",
      "revId": "d7900c08e9a77d61dcefe4e96368ef20fbf619dd",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2fcdfc9d_f5bfd049",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000900
      },
      "writtenOn": "2024-04-05T18:02:15Z",
      "side": 1,
      "message": "Yeah, I tried all the options we discussed on discord and none of them seemed like an appropriate solution. The CLI application is not even aware of phosphor-logging so it can\u0027t call any lg2 API to disable prints (I wasn\u0027t thinking ahead when I suggested that). And it doesn\u0027t make sense to require the user to always set an environment variable to make the app work correctly.\n\nMaybe the answer here is that libraries should not use lg2?\n\nI just tested glog in a simple program and it does not print anything to stderr by default. It requires a flag or env var: https://github.com/google/glog?tab\u003dreadme-ov-file#setting-flags",
      "parentUuid": "ac35126b_178c888d",
      "revId": "d7900c08e9a77d61dcefe4e96368ef20fbf619dd",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2f4de9aa_54628223",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000900
      },
      "writtenOn": "2024-04-05T18:10:59Z",
      "side": 1,
      "message": "Sorry, I was wrong. glog does print to stderr by default but only for ERROR messages. What do you think of implementing the same `stderrthreshold` environment variable in lg2 such that only errors and above are printed by default and an environment variable can modify the threshold?\n\nI think it would be a reasonable solution to my specific problem which is mostly clutter caused by debug and info messages.",
      "parentUuid": "2fcdfc9d_f5bfd049",
      "revId": "d7900c08e9a77d61dcefe4e96368ef20fbf619dd",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e286c5ad_303a4daf",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2024-04-05T20:17:49Z",
      "side": 1,
      "message": "What is the library in question?  We don\u0027t generally have libraries, so I\u0027m not sure what code this is.\n\nI would not go so far as to say \"libraries shouldn\u0027t use lg2\".",
      "parentUuid": "2f4de9aa_54628223",
      "revId": "d7900c08e9a77d61dcefe4e96368ef20fbf619dd",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1848ce34_9ed2a068",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2024-04-05T20:20:32Z",
      "side": 1,
      "message": "\u003e What do you think of implementing the same stderrthreshold environment variable in lg2 such that only errors and above are printed by default and an environment variable can modify the threshold?\n\nThe problem I see is that that subverts the typical reason why we have it send to stderr to begin with, which is that someone had a problem with a daemon and they want to manually run that daemon and poke at it to try to debug the issue (that was the use case that was described to me).\n\nIf we go an environment variable route, can\u0027t the CLI tool set the environment variable before any calls are made to the lg2 library?  Unless the environment variable checking is all done as part of the library loading (I can\u0027t remember).",
      "parentUuid": "e286c5ad_303a4daf",
      "revId": "d7900c08e9a77d61dcefe4e96368ef20fbf619dd",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a498615e_4386dca2",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000008
      },
      "writtenOn": "2024-04-05T20:29:37Z",
      "side": 1,
      "message": "\u003e If we go an environment variable route, can\u0027t the CLI tool set the environment variable before any calls are made to the lg2 library?  Unless the environment variable checking is all done as part of the library loading (I can\u0027t remember).\n\nI\u0027m fairly certain I tried that and it didn\u0027t work.",
      "parentUuid": "1848ce34_9ed2a068",
      "revId": "d7900c08e9a77d61dcefe4e96368ef20fbf619dd",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ],
  "submitRequirementResults": []
}